
#–Ω–µ –∑–∞–ø—É—Å–∫–∞—Ç—å app.py
#–ò–≤–∞–Ω –°–µ—Ä–≥–µ–µ–≤–∏—á —Ç–µ—Å—Ç–∏ –≤—Å–µ –≤ generate_music.py
#–∫ –ø—è—Ç–Ω–∏—Ü–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏  –ë—É–¥–µ—Ç –ª—É—á—à–µ —É –º–µ–Ω—è –Ω–æ—É—Ç –Ω–µ –≤—ã–≤–æ–∑–∏—Ç —Å—Ç–æ–ª—å–∫–æ –æ–±—É—á–∞—Ç—å –ø—Ä–æ—Å—Ç–æ —Ç—É—Ç —É –º–µ–Ω—è —Å –∂–µ–ª–µ–∑–æ–º –≤ —Ü–µ–ª–æ–º –ø—Ä–æ–±–µ–º—ã(((

import streamlit as st
import os
from model.lstm_model import LSTMModel
from model.cnn_lstm_model import CNNLSTMModel
from model.bidirectional_lstm_model import BidirectionalLSTMModel
from model.gru_model import GRUModel
from model.transformer_model import TransformerModel
import pretty_midi
import numpy as np
import tempfile
from tensorflow.keras.models import load_model

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –º—É–∑—ã–∫–∏",
    page_icon="üéµ",
    layout="wide"
)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.title("üéµ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –º—É–∑—ã–∫–∏")

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
os.makedirs("output", exist_ok=True)
os.makedirs(os.path.join('src', 'model', 'model_weights'), exist_ok=True)

# –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏
model_type = st.sidebar.selectbox(
    '–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å',
    ['LSTM', 'CNN-LSTM', 'Bidirectional LSTM', 'GRU', 'Transformer']
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏
model_map = {
    'LSTM': LSTMModel,
    'CNN-LSTM': CNNLSTMModel,
    'Bidirectional LSTM': BidirectionalLSTMModel,
    'GRU': GRUModel,
    'Transformer': TransformerModel
}

# –ú–∞–ø–ø–∏–Ω–≥ –∏–º–µ–Ω –º–æ–¥–µ–ª–µ–π –∫ –∏–º–µ–Ω–∞–º —Ñ–∞–π–ª–æ–≤
model_file_map = {
    'LSTM': 'lstm_model.h5',
    'CNN-LSTM': 'cnn_lstm_model.h5',
    'Bidirectional LSTM': 'bidirectional lstm_model.h5',
    'GRU': 'gru_model.h5',
    'Transformer': 'transformer_model.h5'
}

generator = model_map[model_type]()

# –ó–∞–≥—Ä—É–∑–∫–∞ –≤–µ—Å–æ–≤ –º–æ–¥–µ–ª–∏
weights_path = os.path.join('src', 'model', 'model_weights', model_file_map[model_type])
if os.path.exists(weights_path):
    st.info(f'–ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–µ—Å–æ–≤ –∏–∑ {weights_path}')
    try:
        # –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–µ—Å–∞ –Ω–∞–ø—Ä—è–º—É—é
        model = load_model(weights_path)
        # –ö–æ–ø–∏—Ä—É–µ–º –≤–µ—Å–∞ –≤ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
        generator.model.set_weights(model.get_weights())
        st.success('–ú–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!')
    except Exception as e:
        st.warning(f'–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–µ—Å–∞ –º–æ–¥–µ–ª–∏. –û—à–∏–±–∫–∞: {str(e)}')
        st.info('–ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –Ω–æ–≤–∞—è –º–æ–¥–µ–ª—å.')
else:
    st.warning(f'–ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ –ø—É—Ç–∏: {weights_path}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –æ–±—É—á–∏—Ç–µ –º–æ–¥–µ–ª—å.')

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
st.subheader('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏')
duration = st.slider('–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–Ω–æ—Ç—ã)', min_value=100, max_value=1000, value=500)
temperature = st.slider('–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞', min_value=0.1, max_value=1.0, value=0.7, step=0.1)

if st.button('–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –º—É–∑—ã–∫—É'):
    with st.spinner('–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º—É–∑—ã–∫–∏...'):
        try:
            # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è MIDI
            with tempfile.NamedTemporaryFile(suffix='.mid', delete=False) as tmp:
                output_path = tmp.name
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –º—É–∑—ã–∫—É
            generator.generate_music(
                output_path,
                length=duration,
                temperature=temperature
            )
            
            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            st.success('–ú—É–∑—ã–∫–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞!')
            
            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
            with open(output_path, 'rb') as f:
                st.download_button(
                    label='–°–∫–∞—á–∞—Ç—å MIDI —Ñ–∞–π–ª',
                    data=f,
                    file_name='generated_music.mid',
                    mime='audio/midi'
                )
            
            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            os.unlink(output_path)
        except Exception as e:
            st.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º—É–∑—ã–∫–∏: {str(e)}')

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ
st.header("–û –ø—Ä–æ–µ–∫—Ç–µ")
st.markdown(f"""
–≠—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –º—É–∑—ã–∫–∏, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–π —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è MIDI-—Ñ–∞–π–ª–æ–≤.

### –¢–µ–∫—É—â–∞—è –º–æ–¥–µ–ª—å: {model_type}
- –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π –Ω–æ—Ç
- –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º—É–∑—ã–∫–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏

### –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:
- TensorFlow/Keras –¥–ª—è –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π
- PrettyMIDI –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å MIDI —Ñ–∞–π–ª–∞–º–∏
- Streamlit –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞

### –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã:
1. LSTM - –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è–º–∏
2. CNN-LSTM - –∫–æ–º–±–∏–Ω–∞—Ü–∏—è —Å–≤–µ—Ä—Ç–æ—á–Ω—ã—Ö –∏ —Ä–µ–∫—É—Ä—Ä–µ–Ω—Ç–Ω—ã—Ö —Å–ª–æ–µ–≤
3. Bidirectional LSTM - –¥–≤—É–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π
4. GRU - —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è LSTM
5. Transformer - —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å –º–µ—Ö–∞–Ω–∏–∑–º–æ–º –≤–Ω–∏–º–∞–Ω–∏—è

### –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:
1. –ú–æ–¥–µ–ª—å –æ–±—É—á–∞–µ—Ç—Å—è –Ω–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è—Ö –Ω–æ—Ç –∏–∑ MIDI —Ñ–∞–π–ª–æ–≤
2. –ü—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–æ–¥–µ–ª—å —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –Ω–æ—Ç
3. –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ MIDI —Ñ–∞–π–ª, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –ø—Ä–æ—Å–ª—É—à–∞—Ç—å –∏–ª–∏ —Å–∫–∞—á–∞—Ç—å
""")

try:
    model = load_model('src/model/model_weights/best_model.h5')
    print("–§–∞–π–ª –≤–µ—Å–æ–≤ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω.")
except Exception as e:
    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞ –≤–µ—Å–æ–≤: {str(e)}") 

